@using System.Reflection
@using Application.Services
@typeparam TItem where TItem : class, Application.Models.IEntity
@inject NavigationManager Navigation

<link href="css/GenericTable.css" rel="stylesheet" />

<h3>@Title</h3>

@if (Items == null)
{
    <p>Loading...</p>
}
else if (!Items.Any())
{
    <p>Pas de données</p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            @foreach (var prop in _properties)
            {
                <th>@prop.Name</th>
            }
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Items)
        {
            <tr @onclick="() => NavigateToItem((int)item.GetId())" style="cursor:pointer">
                @foreach (var prop in _properties)
                {
                    <td>@(prop.GetValue(item))</td>
                }
            </tr>
        }
        </tbody>
    </table>
}

@code {
    [Parameter] public string Title { get; set; } = string.Empty;
    [Parameter] public List<TItem>? Items { get; set; }

    private PropertyInfo[] _properties = Array.Empty<PropertyInfo>();

    protected override void OnInitialized()
    {
        _properties = typeof(TItem).GetProperties();
    }

    private void NavigateToItem(int id)
    {
        // Navigue vers une page dédiée par type + id
        Navigation.NavigateTo($"/{typeof(TItem).Name.ToLower()}/{id}");
    }
}