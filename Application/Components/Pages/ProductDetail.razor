@page "/product/{Id:int}"
@using System.Security.Cryptography
@using Application.Attributes
@using Application.Models
@using Application.Services
@using Application.ViewModel
@inject BaseEntityViewModel<Marque> _BrandViewModel
@inject BaseEntityViewModel<TypeProduit> _ProductTypeViewModel
@inject ProductViewModel _ProductViewModel
@inject NavigationManager NavManager



<link href="css/productCreate.css" rel="stylesheet" />


<PageTitle>Products Detail</PageTitle>


<h3>Details of product </h3>

@if (_ProductViewModel._currentEditingProduct == null)
{
    <p>Loadingâ€¦</p>
}
else
{
    <div id="addDiv">
        <EditForm Model="_ProductViewModel._currentEditingProduct" OnValidSubmit="UpdateProduct">
            @foreach (var prop in typeof(Product).GetProperties().Where(p => !Attribute.IsDefined(p, typeof(IgnoreInTemplateAttribute))))
            {
                <div>
                    <label>@prop.Name</label>
                            
                    @if (prop.PropertyType == typeof(int) || prop.PropertyType == typeof(int?))
                    {
                        <input type="number"
                               value="@prop.GetValue(_ProductViewModel._currentEditingProduct)"
                               @onchange="e => prop.SetValue(_ProductViewModel._currentEditingProduct, Convert.ToInt32(e.Value))" />
                    }
                    else
                    {
                        <input type="text"
                               value="@prop.GetValue(_ProductViewModel._currentEditingProduct)"
                               @onchange="e => prop.SetValue(_ProductViewModel._currentEditingProduct, e.Value?.ToString())" />
                    }
                </div>
            }
            <h4>Image : </h4>
            @if (!string.IsNullOrWhiteSpace(_ProductViewModel._currentEditingProduct?.UriPhoto))
            {
                <img src="@_ProductViewModel._currentEditingProduct.UriPhoto" alt="@_ProductViewModel._currentEditingProduct.NomProduit"/>
            }
            else
            {
                <p>No image available</p>
            }
            <select @bind="_ProductViewModel._currentEditingProduct.IdMarque">
                <option value="">-- Select brand --</option>
                @foreach (var brand in _BrandViewModel.Items)
                {
                    <option value="@brand.IdMarque">@brand.NomMarque</option>
                }
            </select>

            <select @bind="_ProductViewModel._currentEditingProduct.IdTypeProduit">
                <option value="">-- Select product type --</option>
                @foreach (var type in _ProductTypeViewModel.Items)
                {
                    <option value="@type.IdTypeProduit">@type.NomTypeProduit</option>
                }
            </select>
            <div class="form-buttons">
                <button @onclick="DeleteProduct" id="deleteButton">Supprimer</button>
                <button type="submit">Update</button>
            </div>
        </EditForm>
        
    </div>
}

@code {
    [Parameter] public int Id { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await _BrandViewModel.LoadAsync();
        await _ProductTypeViewModel.LoadAsync();
        await _ProductViewModel.SetCurrentEditingProduct(Id);
    }

    private async Task UpdateProduct()
    {
        await _ProductViewModel.UpdateCurrentEditingProduct();
    }

    private async Task DeleteProduct()
    {
        await _ProductViewModel.DeleteCurrentEditingProduct();
        NavManager.NavigateTo("/products");
    }
}