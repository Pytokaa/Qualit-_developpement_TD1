@using Application.Models
@using Application.Services
@page "/products"
@inject ProductWSService _ProductWsService

<link href="css/productsTable.css" rel="stylesheet" />

<PageTitle>Products</PageTitle>

<h3>Products</h3>

<div id="addProduct" @onclick='() => NavigateToPage("/product/create")'>
    <p>Add a product</p>
</div>

@if (products == null)
{
    <p>Loading...</p>
}
else if (!products.Any())
{
    <p>There is no product</p>
}
else
{
    <div id="divProducts">
        @foreach (var product in products)
        {
            <div class="divProduct" @onclick="() => NavigateToProduct(product.IdProduit)">
                <img src="@GetPhoto(product.UriPhoto)" alt="@product.NomPhoto">
                <h4>@product.NomProduit</h4>
            </div>
        }
    </div>
}

@code {
    private List<Product>? products;

    [Inject] NavigationManager Navigation { get; set; }

    protected override async Task OnInitializedAsync()
    {
        products = await _ProductWsService.GetAllAsync() ?? new List<Product>();
    }

    private void NavigateToPage(string uri)
    {
        Navigation.NavigateTo(uri);
    }

    private void NavigateToProduct(int id)
    {
        Navigation.NavigateTo($"/product/{id}");
    }

    private string GetPhoto(string? uri)
    {
        return string.IsNullOrWhiteSpace(uri)
            ? "_content/YourApp/images/empty-square.png"
            : uri;
    }
}