@using System.Text.Json
@using Application.Attributes
@using Application.Models
@using Application.Models.StateService
@using Application.Services
@using Application.ViewModel
@page "/product/create"
@inject IStateService<Product> ProductState
@inject NavigationManager NavManager
@inject BaseEntityViewModel<Marque> _BrandViewModel
@inject BaseEntityViewModel<TypeProduit> _ProductTypeViewModel
@inject ProductViewModel _ProductViewModel


<link href="css/productCreate.css" rel="stylesheet" />


<PageTitle>Product Create</PageTitle>

<h3>Create a product</h3>



@if (_BrandViewModel.Items.Count == 0 || _ProductTypeViewModel.Items.Count == 0)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@_ProductViewModel._productToAdd.CurrentEntity" OnValidSubmit="SaveProduct">
        @foreach (var product in typeof(Product).GetProperties().Where(p => !Attribute.IsDefined(p, typeof(IgnoreInTemplateAttribute))))
        {
            <div>
                <label>@product.Name</label>
                            
                @if (product.PropertyType == typeof(int) || product.PropertyType == typeof(int?))
                {
                    <input type="number"
                           value="@_ProductViewModel._productToAdd.CurrentEntity"
                           @onchange="e => product.SetValue(_ProductViewModel._productToAdd.CurrentEntity, Convert.ToInt32(e.Value))" />
                }
                else
                {
                    <input type="text"
                           value="@product.GetValue(_ProductViewModel._productToAdd.CurrentEntity)"
                           @onchange="e => product.SetValue(_ProductViewModel._productToAdd.CurrentEntity, e.Value?.ToString())" />
                }
            </div>
            
        }
        <select @bind="_ProductViewModel._productToAdd.CurrentEntity.IdMarque">
            <option value="">-- Select brand --</option>
            @foreach (var brand in _BrandViewModel.Items)
            {
                <option value="@brand.IdMarque">@brand.NomMarque</option>
            }
        </select>

        <select @bind="_ProductViewModel._productToAdd.CurrentEntity.IdTypeProduit">
            <option value="">-- Select product type --</option>
            @foreach (var type in _ProductTypeViewModel.Items)
            {
                <option value="@type.IdTypeProduit">@type.NomTypeProduit</option>
            }
        </select>
        <button type="submit">Add</button>
    </EditForm>
}
@code{
    private IBrowserFile selectedFile;
    protected override async Task OnInitializedAsync()
    {
        await _BrandViewModel.LoadAsync();
        await _ProductTypeViewModel.LoadAsync();
        if (ProductState.CurrentEntity == null)
        {
            ProductState.CurrentEntity = new Product();
        }
    }
    private async Task SaveProduct()
    {
        var (succes, error) = await _ProductViewModel.AddProductAsync();
        if (succes)
        {
            NavManager.NavigateTo("/products");
        }
        else
        {
            Console.WriteLine($"Erreur : {error}");
        }
    }
    
}